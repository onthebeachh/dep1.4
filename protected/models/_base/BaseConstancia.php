<?php

/**
 * This is the model base class for the table "constancia".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Constancia".
 *
 * Columns in table "constancia" available as properties of the model,
 * followed by relations of table "constancia" available as properties of the model.
 *
 * @property integer $id
 * @property integer $procesogasto_id
 * @property integer $proyecto_id
 * @property string $mes
 * @property string $item
 * @property string $detalleDocumento
 * @property string $valor
 *
 * @property Procesogasto $procesogasto
 * @property Proyecto $proyecto
 */
abstract class BaseConstancia extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'constancia';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Constancia|Constancias', $n);
	}

	public static function representingColumn() {
		return 'mes';
	}

	public function rules() {
		return array(
			array('procesogasto_id, proyecto_id', 'numerical', 'integerOnly'=>true),
			array('mes, item, valor', 'length', 'max'=>45),
			array('detalleDocumento', 'length', 'max'=>200),
			array('procesogasto_id, proyecto_id, mes, item, detalleDocumento, valor', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, procesogasto_id, proyecto_id, mes, item, detalleDocumento, valor', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'procesogasto' => array(self::BELONGS_TO, 'Procesogasto', 'procesogasto_id'),
			'proyecto' => array(self::BELONGS_TO, 'Proyecto', 'proyecto_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'procesogasto_id' => null,
			'proyecto_id' => null,
			'mes' => Yii::t('app', 'Mes'),
			'item' => Yii::t('app', 'Item'),
			'detalleDocumento' => Yii::t('app', 'Detalle Documento'),
			'valor' => Yii::t('app', 'Valor'),
			'procesogasto' => null,
			'proyecto' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('procesogasto_id', $this->procesogasto_id);
		$criteria->compare('proyecto_id', $this->proyecto_id);
		$criteria->compare('mes', $this->mes, true);
		$criteria->compare('item', $this->item, true);
		$criteria->compare('detalleDocumento', $this->detalleDocumento, true);
		$criteria->compare('valor', $this->valor, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}