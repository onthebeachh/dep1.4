<?php

/**
 * This is the model base class for the table "plantilla".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Plantilla".
 *
 * Columns in table "plantilla" available as properties of the model,
 * followed by relations of table "plantilla" available as properties of the model.
 *
 * @property integer $id
 * @property integer $procesogasto_id
 * @property integer $controlseguimiento_id
 * @property integer $proyecto_id
 * @property integer $item_id
 * @property string $tipoDocumento
 * @property string $numDocumento
 * @property string $numComprobanteEI
 * @property string $fechaEI
 * @property string $tipoDocumentoFB
 * @property string $numDocumentoFB
 * @property string $rutProveedor
 * @property string $fechaEmisionDoc
 * @property string $fechaCancelacionDoc
 * @property string $detalleDoc
 * @property string $valorTotal
 * @property string $observacion
 *
 * @property Controlseguimiento $controlseguimiento
 * @property Item $item
 * @property Procesogasto $procesogasto
 * @property Proyecto $proyecto
 */
abstract class BasePlantilla extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'plantilla';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Plantilla|Plantillas', $n);
	}

	public static function representingColumn() {
		return 'tipoDocumento';
	}

	public function rules() {
		return array(
			array('procesogasto_id, controlseguimiento_id, proyecto_id, item_id', 'numerical', 'integerOnly'=>true),
			array('tipoDocumento, numDocumento, numComprobanteEI, tipoDocumentoFB, numDocumentoFB, rutProveedor, valorTotal', 'length', 'max'=>45),
			array('detalleDoc, observacion', 'length', 'max'=>200),
			array('fechaEI, fechaEmisionDoc, fechaCancelacionDoc', 'safe'),
			array('procesogasto_id, controlseguimiento_id, proyecto_id, item_id, tipoDocumento, numDocumento, numComprobanteEI, fechaEI, tipoDocumentoFB, numDocumentoFB, rutProveedor, fechaEmisionDoc, fechaCancelacionDoc, detalleDoc, valorTotal, observacion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, procesogasto_id, controlseguimiento_id, proyecto_id, item_id, tipoDocumento, numDocumento, numComprobanteEI, fechaEI, tipoDocumentoFB, numDocumentoFB, rutProveedor, fechaEmisionDoc, fechaCancelacionDoc, detalleDoc, valorTotal, observacion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'controlseguimiento' => array(self::BELONGS_TO, 'Controlseguimiento', 'controlseguimiento_id'),
			'item' => array(self::BELONGS_TO, 'Item', 'item_id'),
			'procesogasto' => array(self::BELONGS_TO, 'Procesogasto', 'procesogasto_id'),
			'proyecto' => array(self::BELONGS_TO, 'Proyecto', 'proyecto_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'procesogasto_id' => null,
			'controlseguimiento_id' => null,
			'proyecto_id' => null,
			'item_id' => null,
			'tipoDocumento' => Yii::t('app', 'Tipo Documento'),
			'numDocumento' => Yii::t('app', 'Num Documento'),
			'numComprobanteEI' => Yii::t('app', 'Num Comprobante Ei'),
			'fechaEI' => Yii::t('app', 'Fecha Ei'),
			'tipoDocumentoFB' => Yii::t('app', 'Tipo Documento Fb'),
			'numDocumentoFB' => Yii::t('app', 'Num Documento Fb'),
			'rutProveedor' => Yii::t('app', 'Rut Proveedor'),
			'fechaEmisionDoc' => Yii::t('app', 'Fecha Emision Doc'),
			'fechaCancelacionDoc' => Yii::t('app', 'Fecha Cancelacion Doc'),
			'detalleDoc' => Yii::t('app', 'Detalle Doc'),
			'valorTotal' => Yii::t('app', 'Valor Total'),
			'observacion' => Yii::t('app', 'Observacion'),
			'controlseguimiento' => null,
			'item' => null,
			'procesogasto' => null,
			'proyecto' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('procesogasto_id', $this->procesogasto_id);
		$criteria->compare('controlseguimiento_id', $this->controlseguimiento_id);
		$criteria->compare('proyecto_id', $this->proyecto_id);
		$criteria->compare('item_id', $this->item_id);
		$criteria->compare('tipoDocumento', $this->tipoDocumento, true);
		$criteria->compare('numDocumento', $this->numDocumento, true);
		$criteria->compare('numComprobanteEI', $this->numComprobanteEI, true);
		$criteria->compare('fechaEI', $this->fechaEI, true);
		$criteria->compare('tipoDocumentoFB', $this->tipoDocumentoFB, true);
		$criteria->compare('numDocumentoFB', $this->numDocumentoFB, true);
		$criteria->compare('rutProveedor', $this->rutProveedor, true);
		$criteria->compare('fechaEmisionDoc', $this->fechaEmisionDoc, true);
		$criteria->compare('fechaCancelacionDoc', $this->fechaCancelacionDoc, true);
		$criteria->compare('detalleDoc', $this->detalleDoc, true);
		$criteria->compare('valorTotal', $this->valorTotal, true);
		$criteria->compare('observacion', $this->observacion, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}