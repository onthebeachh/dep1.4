<?php

/**
 * This is the model base class for the table "procesocompra".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Procesocompra".
 *
 * Columns in table "procesocompra" available as properties of the model,
 * followed by relations of table "procesocompra" available as properties of the model.
 *
 * @property integer $id
 * @property integer $subitem_id
 * @property string $nombre
 * @property string $sigla
 * @property string $caracteristicas
 * @property string $estado
 * @property string $fechaBL
 * @property string $idBL
 * @property string $fechaTD
 * @property string $numeroidTD
 * @property string $observacionTD
 * @property string $tipo
 *
 * @property Adquisicion[] $adquisicions
 * @property Controlseguimiento[] $controlseguimientos
 * @property Enviobase[] $enviobases
 * @property Et[] $ets
 * @property Peticionet[] $peticionets
 * @property Subitem $subitem
 * @property Solicitudcompra[] $solicitudcompras
 */
abstract class BaseProcesocompra extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'procesocompra';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Procesocompra|Procesocompras', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('subitem_id', 'numerical', 'integerOnly'=>true),
			array('nombre, sigla, estado, idBL, numeroidTD, tipo', 'length', 'max'=>45),
			array('caracteristicas, observacionTD', 'length', 'max'=>200),
			array('fechaBL, fechaTD', 'safe'),
			array('subitem_id, nombre, sigla, caracteristicas, estado, fechaBL, idBL, fechaTD, numeroidTD, observacionTD, tipo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, subitem_id, nombre, sigla, caracteristicas, estado, fechaBL, idBL, fechaTD, numeroidTD, observacionTD, tipo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'adquisicions' => array(self::HAS_MANY, 'Adquisicion', 'procesocompra_id'),
			'controlseguimientos' => array(self::HAS_MANY, 'Controlseguimiento', 'procesocompra_id'),
			'enviobases' => array(self::HAS_MANY, 'Enviobase', 'procesocompra_id'),
			'et' => array(self::HAS_ONE, 'Et', 'procesocompra_id'),
			'peticionets' => array(self::HAS_MANY, 'Peticionet', 'procesocompra_id'),
			'subitem' => array(self::BELONGS_TO, 'Subitem', 'subitem_id'),
			'solicitudcompras' => array(self::HAS_MANY, 'Solicitudcompra', 'procesocompra_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'subitem_id' => null,
			'nombre' => Yii::t('app', 'Nombre'),
			'sigla' => Yii::t('app', 'Sigla'),
			'caracteristicas' => Yii::t('app', 'Caracteristicas'),
			'estado' => Yii::t('app', 'Estado'),
			'fechaBL' => Yii::t('app', 'Fecha Ingreso'),
			'idBL' => Yii::t('app', 'Id Base licitacion'),
			'fechaTD' => Yii::t('app', 'Fecha Ttrato directo'),
			'numeroidTD' => Yii::t('app', 'Numeroid Trato directo'),
			'observacionTD' => Yii::t('app', 'Observacion Trato directo'),
			'tipo' => Yii::t('app', 'Tipo'),
			'adquisicions' => null,
			'controlseguimientos' => null,
			'enviobases' => null,
			'ets' => null,
			'peticionets' => null,
			'subitem' => null,
			'solicitudcompras' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('subitem_id', $this->subitem_id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('sigla', $this->sigla, true);
		$criteria->compare('caracteristicas', $this->caracteristicas, true);
		$criteria->compare('estado', $this->estado, true);
		$criteria->compare('fechaBL', $this->fechaBL, true);
		$criteria->compare('idBL', $this->idBL, true);
		$criteria->compare('fechaTD', $this->fechaTD, true);
		$criteria->compare('numeroidTD', $this->numeroidTD, true);
		$criteria->compare('observacionTD', $this->observacionTD, true);
		$criteria->compare('tipo', $this->tipo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}