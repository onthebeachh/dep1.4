<?php

/**
 * This is the model base class for the table "subitem".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Subitem".
 *
 * Columns in table "subitem" available as properties of the model,
 * followed by relations of table "subitem" available as properties of the model.
 *
 * @property integer $id
 * @property integer $proyecto_id
 * @property integer $tipoaporte_id
 * @property integer $item_id
 * @property integer $centrocosto_id
 * @property string $codigo
 * @property string $descripcion
 * @property integer $cantidad
 * @property string $costoUnitario
 * @property string $montos
 * @property integer $correlativo
 *
 * @property Procesocompra[] $procesocompras
 * @property Procesogasto[] $procesogastos
 * @property Centrocosto $centrocosto
 * @property Item $item
 * @property Proyecto $proyecto
 * @property Tipoaporte $tipoaporte
 */
abstract class BaseSubitem extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subitem';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Subitem|Subitems', $n);
	}

	public static function representingColumn() {
		return 'codigo';
	}

	public function rules() {
		return array(
			array('proyecto_id, tipoaporte_id, item_id, centrocosto_id, cantidad, correlativo', 'numerical', 'integerOnly'=>true),
			array('codigo, costoUnitario, montos', 'length', 'max'=>45),
			array('descripcion', 'length', 'max'=>200),
			array('proyecto_id, tipoaporte_id, item_id, centrocosto_id, codigo, descripcion, cantidad, costoUnitario, montos, correlativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, proyecto_id, tipoaporte_id, item_id, centrocosto_id, codigo, descripcion, cantidad, costoUnitario, montos, correlativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'procesocompras' => array(self::HAS_MANY, 'Procesocompra', 'subitem_id'),
			'procesogastos' => array(self::HAS_MANY, 'Procesogasto', 'subitem_id'),
			'centrocosto' => array(self::BELONGS_TO, 'Centrocosto', 'centrocosto_id'),
			'item' => array(self::BELONGS_TO, 'Item', 'item_id'),
			'proyecto' => array(self::BELONGS_TO, 'Proyecto', 'proyecto_id'),
			'tipoaporte' => array(self::BELONGS_TO, 'Tipoaporte', 'tipoaporte_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'correlativo'),
			'proyecto_id' => null,
			'tipoaporte_id' => null,
			'item_id' => null,
			'centrocosto_id' => null,
			'codigo' => Yii::t('app', 'Codigo'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'cantidad' => Yii::t('app', 'Cantidad'),
			'costoUnitario' => Yii::t('app', 'Costo Unitario'),
			'montos' => Yii::t('app', 'Montos'),
			'correlativo' => Yii::t('app', 'Correlativo'),
			'procesocompras' => null,
			'procesogastos' => null,
			'centrocosto' => null,
			'item' => null,
			'proyecto' => null,
			'tipoaporte' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('proyecto_id', $this->proyecto_id);
		$criteria->compare('tipoaporte_id', $this->tipoaporte_id);
		$criteria->compare('item_id', $this->item_id);
		$criteria->compare('centrocosto_id', $this->centrocosto_id);
		$criteria->compare('codigo', $this->codigo, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('cantidad', $this->cantidad);
		$criteria->compare('costoUnitario', $this->costoUnitario, true);
		$criteria->compare('montos', $this->montos, true);
		$criteria->compare('correlativo', $this->correlativo);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
				'pageSize'=>100
            ),
		));
	}
}