<?php

/**
 * This is the model base class for the table "alerta".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Alerta".
 *
 * Columns in table "alerta" available as properties of the model,
 * followed by relations of table "alerta" available as properties of the model.
 *
 * @property integer $id
 * @property string $titulo
 * @property string $mensaje
 * @property string $fechaAviso
 * @property integer $visible
 *
 * @property Adquisicion[] $adquisicions
 * @property Et[] $ets
 */
abstract class BaseAlerta extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'alerta';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Alerta|Alertas', $n);
	}

	public static function representingColumn() {
		return 'titulo';
	}

	public function rules() {
		return array(
			array('visible', 'numerical', 'integerOnly'=>true),
			array('titulo, mensaje', 'length', 'max'=>45),
			array('fechaAviso', 'safe'),
			array('titulo, mensaje, fechaAviso, visible', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, titulo, mensaje, fechaAviso, visible', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'adquisicions' => array(self::HAS_MANY, 'Adquisicion', 'alerta_id'),
			'ets' => array(self::HAS_MANY, 'Et', 'alerta_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'titulo' => Yii::t('app', 'Titulo'),
			'mensaje' => Yii::t('app', 'Mensaje'),
			'fechaAviso' => Yii::t('app', 'Fecha Aviso'),
			'visible' => Yii::t('app', 'Visible'),
			'adquisicions' => null,
			'ets' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('titulo', $this->titulo, true);
		$criteria->compare('mensaje', $this->mensaje, true);
		$criteria->compare('fechaAviso', $this->fechaAviso, true);
		$criteria->compare('visible', $this->visible);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}